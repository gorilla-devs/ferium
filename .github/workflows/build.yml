name: Build

on:
  push:
    commits:
    paths:
      - "**.rs"
      - "**.yml"
      - "Cargo.lock"
      - "Cargo.toml"
      - "justfile"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1

      - name: Install Rust for macOS
        if: matrix.os == 'macos-latest'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin

      - name: Install Rust for Windows
        if: matrix.os == 'windows-latest'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Windows GNU toolchain for Linux
        if: matrix.os == 'ubuntu-latest'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
      - name: Install musl toolchain for linux
        if: matrix.os == 'ubuntu-latest'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
      - name: Install musl toolchain for ARM64
        if: matrix.os == 'ubuntu-latest'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-musl

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          # install clang-14 on focal
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 14
          sudo apt-get install librust-gdk-dev gcc-mingw-w64-x86-64 musl musl-tools gcc-aarch64-linux-gnu

      - name: Lint code
        run: just lint

      - name: Run tests
        if: matrix.os != 'ubuntu-latest'
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Run Linux tests
        if: matrix.os == 'ubuntu-latest'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target=x86_64-unknown-linux-musl --no-default-features

      - name: Build macOS
        if: matrix.os == 'macos-latest'
        run: |
          just build-mac-intel
          just build-mac-arm

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: just build-win

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          just build-linux
          just build-linux-nogui

      - name: Build ARM Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          just build-linux-arm64
          just build-linux-arm64-nogui

      - name: Build Windows GNU
        if: matrix.os == 'ubuntu-latest'
        run: just build-win-gnu

      - name: Upload build artefacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: out/ferium*.zip
          if-no-files-found: error
